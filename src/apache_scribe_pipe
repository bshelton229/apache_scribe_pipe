#!/usr/bin/env python

import sys
from scribe import scribe
from thrift.transport import TTransport, TSocket
from thrift.protocol import TBinaryProtocol

#Parse the options
if len(sys.argv) == 2:
  category = sys.argv[1]
  host = '127.0.0.1'
  port = 1463
elif len(sys.argv) == 4 and sys.argv[1] == '-h':
  category = sys.argv[3]
  host_port = sys.argv[2].split(':')
  host = host_port[0]
  if len(host_port) > 1:
    port = int(host_port[1])
  else:
    port = 1463
else:
  sys.exit('usage (message is stdin): scribe_cat [-h host[:port]] category')

#Open the connection
socket = TSocket.TSocket(host=host, port=port)
transport = TTransport.TFramedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(trans=transport, strictRead=False, strictWrite=False)
client = scribe.Client(iprot=protocol, oprot=protocol)
transport.open()

while 1:
  line = sys.stdin.readline()
  if not line:
    break
  else:
    log_entry = scribe.LogEntry(category=category, message=line)  

  #log Result and Close
  result = client.Log(messages=[log_entry])
  
  if result == scribe.ResultCode.OK:
    pass
  elif result == scribe.ResultCode.TRY_LATER:
    print >> sys.stderr, "TRY_LATER"
    sys.exit(84)  # 'T'
  else:
    sys.exit("Unknown error code.")

#Cleanup
transport.close()
sys.exit(0)
